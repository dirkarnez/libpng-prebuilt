name: cpp-cmake-mingw-prebuilt-release-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  
jobs:
  build:
    name: Create Release
    runs-on: windows-2019
    env:
      libraryName: libpng
      cmakeInstallationPath: libpng-installation
      tagName: v1.6.34
      mingwTargetZip: libpng-${{ github.ref_name }}-x86_64-posix-seh-rev0-8.1.0.zip
    steps:
      - name: check mingw version
        run: gcc --version
        
      - name: git clone
        shell: cmd
        run: git clone https://github.com/glennrp/libpng.git && cd libpng && git checkout ${{ env.tagName }}
        
      - name: download zlib v1.2.12
        shell: cmd
        run: aria2c https://github.com/dirkarnez/zlib-prebuilt/releases/download/v1.2.12/zlib-v1.2.12-x86_64-posix-seh-rev0-8.1.0.zip && 7z.exe x zlib-v1.2.12-x86_64-posix-seh-rev0-8.1.0.zip -o zlib-v1.2.12-x86_64-posix-seh-rev0-8.1.0

      - name: cmake
        shell: cmd
        run: cd libpng && cmake.exe -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release -DZLIB_ROOT="..\zlib-v1.2.12-x86_64-posix-seh-rev0-8.1.0" -DBUILD_SHARED_LIBS=OFF -DPNG_SHARED=OFF -DPNG_EXECUTABLES=OFF -DPNG_TESTS=OFF -DCMAKE_INSTALL_PREFIX="build/${{ env.cmakeInstallationPath }}" -B./build
        
      - name: cmake build and install
        shell: cmd
        run: cd libpng\build && cmake --build . && cmake --install .
        
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          directory: "libpng/build/${{ env.cmakeInstallationPath }}"
          filename: "${{ env.mingwTargetZip }}"
          
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "libpng/build/${{ env.cmakeInstallationPath }}/${{ env.mingwTargetZip }}"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
